# Generated by Django 3.2.4 on 2025-04-20 07:27

import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ApprovalNotes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.CharField(blank=True, max_length=500, null=True)),
                ('date_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'amoeba__ApprovalNotes',
            },
        ),
        migrations.CreateModel(
            name='ApprovalSpecFiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approval_file', models.FileField(blank=True, null=True, upload_to='eps_specification/files')),
                ('approval_name', models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                'db_table': 'amoeba__ApprovalSpecFiles',
            },
        ),
        migrations.CreateModel(
            name='ContractItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('associated_product_quantity', models.CharField(default=0, max_length=50)),
            ],
            options={
                'db_table': 'amoeba__Contract_Items',
            },
        ),
        migrations.CreateModel(
            name='CumulativeInvoiceProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_percentage', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8, null=True)),
                ('quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8, null=True)),
                ('total', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8, null=True)),
            ],
            options={
                'db_table': 'amoeba__CumulativeInvoiceProduct',
            },
        ),
        migrations.CreateModel(
            name='Delivery_Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('delivery_date', models.DateTimeField()),
                ('delivery_notes', models.CharField(blank=True, max_length=1000, null=True)),
                ('delivery_note_id', models.CharField(max_length=225)),
                ('status', models.IntegerField(choices=[(1, 'Pending Schedule'), (2, 'Delivery Scheduled'), (3, 'Delivered'), (4, 'Returned')], default=1)),
                ('total_quantity', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('inspect_quantity', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('inspection_status', models.IntegerField(choices=[(1, 'Yet to Process'), (2, 'Partialy Completed'), (3, 'Completed')], default=1)),
            ],
            options={
                'db_table': 'amoeba__Delivery_Notes',
            },
        ),
        migrations.CreateModel(
            name='Delivery_Product_Cart_Associated',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'amoeba__Eps_Delivery_Product_Cart_Associated',
            },
        ),
        migrations.CreateModel(
            name='Delivery_Product_Cart_infill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'amoeba__Eps_Delivery_Product_Cart_infill',
            },
        ),
        migrations.CreateModel(
            name='Delivery_Product_Cart_Main',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'amoeba__Eps_Delivery_Product_Cart_Main',
            },
        ),
        migrations.CreateModel(
            name='DeliveryNoteCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'amoeba__DeliveryNoteCart',
            },
        ),
        migrations.CreateModel(
            name='ElevationModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('elevation', models.CharField(max_length=225)),
            ],
            options={
                'db_table': 'amoeba__ElevationModel',
            },
        ),
        migrations.CreateModel(
            name='Eps_Associated_Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'amoeba__Eps_Associated_Products',
            },
        ),
        migrations.CreateModel(
            name='Eps_Associated_sub_Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('received_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('remaining_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('completed_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'amoeba__Eps_Associated_sub_Products',
            },
        ),
        migrations.CreateModel(
            name='Eps_infill_Details',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('infill_code', models.CharField(blank=True, max_length=50, null=True)),
                ('infill_width', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('infill_height', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('infill_area', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('infill_quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('infill_total_area', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_outsourced', models.BooleanField(default=False)),
                ('form_infill_eps', models.BooleanField(default=False)),
                ('panel_type', models.IntegerField(blank=True, choices=[(1, 'Vision Panel'), (2, 'Spandrel Panel'), (3, 'Openable Panel')], null=True)),
                ('status', models.IntegerField(choices=[(1, 'Yet to Process'), (2, 'Partially Outsourced'), (3, 'OutSourced')], default=1)),
                ('recv_status', models.IntegerField(choices=[(1, 'Yet to Receive'), (2, 'Partially Received'), (3, 'Received')], default=1)),
            ],
            options={
                'db_table': 'amoeba__EPS_Infill_Details',
            },
        ),
        migrations.CreateModel(
            name='Eps_infill_Temp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('infill_code', models.CharField(blank=True, max_length=50, null=True)),
                ('infill_width', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('infill_height', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('infill_area', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('infill_quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('form_infill_eps', models.BooleanField(default=True)),
                ('panel_type', models.IntegerField(blank=True, choices=[(1, 'Vision Panel'), (2, 'Spandrel Panel'), (3, 'Openable Panel')], null=True)),
            ],
            options={
                'db_table': 'amoeba__EPS_Infill_Temp',
            },
        ),
        migrations.CreateModel(
            name='Eps_main',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(choices=[(1, 'Received'), (2, 'In Progress'), (3, 'Completed')], default=1)),
                ('eps_priority', models.IntegerField(choices=[(1, 'Critical'), (2, 'High'), (3, 'Normal')], default=3)),
                ('eps_id', models.CharField(blank=True, max_length=50, null=True)),
                ('expec_delivery_date', models.DateTimeField(blank=True, null=True)),
                ('is_understand', models.BooleanField(default=False)),
                ('is_confirm', models.BooleanField(default=False)),
                ('is_agreed', models.BooleanField(default=False)),
                ('eps_note', models.CharField(blank=True, max_length=500, null=True)),
                ('rating', models.IntegerField(default=0)),
                ('eps_type', models.IntegerField(choices=[(1, 'Product EPS'), (2, 'Infill EPS')], default=1)),
            ],
            options={
                'db_table': 'amoeba__EPS_Main',
            },
        ),
        migrations.CreateModel(
            name='Eps_Outsource_items',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('received_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('actual_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('remaining_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('outsource_area', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'amoeba__Eps_Outsource_items',
            },
        ),
        migrations.CreateModel(
            name='Eps_Outsourced_Data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('outsource_date', models.DateTimeField()),
                ('batch_number', models.CharField(blank=True, max_length=255, null=True)),
                ('outsource_number', models.CharField(blank=True, max_length=255, null=True)),
                ('expected_dalivery_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'amoeba__Eps_Outsourced_Data',
            },
        ),
        migrations.CreateModel(
            name='Eps_Product_Details',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_code', models.CharField(blank=True, max_length=100, null=True)),
                ('product_quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('product_length', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('product_total_length', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('product_width', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('product_height', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('product_area', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('product_total_area', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('add_later', models.BooleanField(default=True)),
                ('product_description', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'amoeba__EPS_Products_Details',
            },
        ),
        migrations.CreateModel(
            name='Eps_Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('width', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('eps_area', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('eps_total_area', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('infill_remaining_area', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('product_type', models.CharField(blank=True, max_length=50, null=True)),
                ('eps_product_note', models.CharField(blank=True, max_length=200, null=True)),
                ('delivery_date', models.DateTimeField(blank=True, null=True)),
                ('eps_product_attachment', models.FileField(blank=True, max_length=10000, null=True, upload_to='attachments/', validators=[django.core.validators.FileExtensionValidator(['pdf', 'csv', 'xlsx'])])),
                ('product_status', models.IntegerField(choices=[(1, 'Received'), (2, 'Awaiting Materials'), (3, 'On-Hold'), (4, 'Scheduled'), (5, 'In Que')], default=5)),
                ('fabrication_drawings_not_req', models.BooleanField(default=False)),
                ('fabrication_note', models.CharField(blank=True, max_length=1000, null=True)),
                ('aluminium_status', models.IntegerField(choices=[(1, 'Yet to Process'), (2, 'Awaiting Materials'), (3, 'In Stock'), (4, 'Partial Stock'), (5, 'N/A')], default=1)),
                ('infill_status', models.IntegerField(choices=[(1, 'Yet to Process'), (2, 'OutSource'), (3, 'Receiving'), (4, 'Received')], default=1)),
                ('accessory_status', models.IntegerField(choices=[(1, 'Yet to Process'), (2, 'Out of Stock'), (3, 'In Stock'), (4, 'Partial Stock'), (5, 'N/A')], default=1)),
                ('shopfloor_status', models.IntegerField(choices=[(1, 'Received'), (2, 'Scheduled'), (3, 'On-Hold'), (4, 'Completed'), (5, 'N/A')], default=1)),
                ('qaqc_status', models.IntegerField(blank=True, choices=[(1, 'Received'), (2, 'Completed')], null=True)),
                ('inspection_status', models.IntegerField(choices=[(1, 'Yet to Process'), (2, 'Partialy Completed'), (3, 'Completed')], default=1)),
                ('vision_panel', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('remaining_vision_panel', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('spandrel_panel', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('remaining_spandrel_panel', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('openable_panel', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('remaining_openable_panel', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('is_vp', models.BooleanField(default=False)),
                ('is_sp', models.BooleanField(default=False)),
                ('is_op', models.BooleanField(default=False)),
                ('vp_description', models.CharField(blank=True, max_length=250, null=True)),
                ('op_description', models.CharField(blank=True, max_length=250, null=True)),
                ('sp_description', models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                'db_table': 'amoeba__EPS_Products',
            },
        ),
        migrations.CreateModel(
            name='Eps_Products_For_Delivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'amoeba__Eps_Products_For_Delivery',
            },
        ),
        migrations.CreateModel(
            name='Eps_QAQC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('pss', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'amoeba__Eps_QAQC',
            },
        ),
        migrations.CreateModel(
            name='Eps_ShopFloor_associated_products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('completed_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('remaining_quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('status', models.IntegerField(choices=[(1, 'Ongoing'), (2, 'Onhold'), (3, 'Completed')], default=1)),
            ],
            options={
                'db_table': 'amoeba__Eps_ShopFloor_associated_products',
            },
        ),
        migrations.CreateModel(
            name='Eps_ShopFloor_main_products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('completed_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('remaining_quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('status', models.IntegerField(choices=[(1, 'Ongoing'), (2, 'Onhold'), (3, 'Completed')], default=1)),
            ],
            options={
                'db_table': 'amoeba__Eps_ShopFloor_main_products',
            },
        ),
        migrations.CreateModel(
            name='Eps_ShopFloors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('required_delivery_date', models.DateField(blank=True, null=True)),
                ('shop_floor_notes', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'amoeba__Eps_ShopFloors',
            },
        ),
        migrations.CreateModel(
            name='EPSBuildingsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('building_name', models.CharField(max_length=225)),
            ],
            options={
                'db_table': 'amoeba__EPSBuildingsModel',
            },
        ),
        migrations.CreateModel(
            name='Fabrication_Attachments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fabrication_docs', models.FileField(blank=True, max_length=10000, null=True, upload_to='fabrications/', validators=[django.core.validators.FileExtensionValidator(['pdf', 'csv', 'xlsx'])])),
            ],
            options={
                'db_table': 'amoeba__Fabrication_attachments',
            },
        ),
        migrations.CreateModel(
            name='FloorModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('floor_name', models.CharField(max_length=225)),
            ],
            options={
                'db_table': 'amoeba__FloorModel',
            },
        ),
        migrations.CreateModel(
            name='InfillSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'amoeba__InfillSchedule',
            },
        ),
        migrations.CreateModel(
            name='Inspection_History',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'amoeba__Inspection_History',
            },
        ),
        migrations.CreateModel(
            name='Outsource_receive_items',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receive_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('received_area', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'amoeba__Outsource_receive_items',
            },
        ),
        migrations.CreateModel(
            name='Outsource_receive_recode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receive_date', models.DateTimeField()),
                ('OS_delivery_number', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'amoeba__Outsource_receive_recode',
            },
        ),
        migrations.CreateModel(
            name='ProjectApprovalStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approval_status', models.CharField(max_length=225)),
                ('color', models.CharField(max_length=225)),
            ],
            options={
                'db_table': 'amoeba__ProjectApprovalStatus',
            },
        ),
        migrations.CreateModel(
            name='ProjectApprovalTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approval_type', models.CharField(max_length=225)),
            ],
            options={
                'db_table': 'amoeba__ProjectApprovalTypes',
            },
        ),
        migrations.CreateModel(
            name='ProjectContractItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('infill_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('authorised_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('issued_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('auth_balance', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('eps_issued', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('eps_balance', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'amoeba__Project_Contract_Items',
            },
        ),
        migrations.CreateModel(
            name='ProjectDeductionPercentage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deduction_percentage', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('deduction_stage', models.IntegerField(choices=[(1, 'Advance'), (2, 'Retention')])),
            ],
            options={
                'db_table': 'amoeba__Project_Deduction_Percentage',
            },
        ),
        migrations.CreateModel(
            name='ProjectDeliveryQuantity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('delivered_qunatity', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=5, null=True)),
                ('delivered_not_invoiced', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
            ],
            options={
                'db_table': 'amoeba__Project_Delivery_Quantity',
            },
        ),
        migrations.CreateModel(
            name='ProjectEstimations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'amoeba__ProjectEstimations',
            },
        ),
        migrations.CreateModel(
            name='ProjectInstalledQuantity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('installed_qunatity', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=5, null=True)),
                ('installed_not_invoiced', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
            ],
            options={
                'db_table': 'amoeba__Project_Installed_Quantity',
            },
        ),
        migrations.CreateModel(
            name='ProjectInvoices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('invoice_number', models.CharField(blank=True, max_length=255, null=True)),
                ('project_invoice_status', models.IntegerField(blank=True, choices=[(1, 'Uncertified'), (2, 'Certified')], default=1, null=True)),
                ('invoice_value', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True)),
                ('invoice_due_date', models.DateTimeField()),
                ('bill_to_name', models.CharField(blank=True, max_length=255, null=True)),
                ('bill_to_email', models.CharField(blank=True, max_length=255, null=True)),
                ('bill_to_address', models.CharField(blank=True, max_length=500, null=True)),
                ('invoice_notes', models.CharField(blank=True, max_length=1000, null=True)),
                ('terms_of_payment', models.IntegerField(choices=[(1, 'Immediate'), (2, '15 Days'), (3, '30 Days'), (4, '45 Days'), (5, '60 Days')])),
                ('invoice_type', models.IntegerField(blank=True, choices=[(1, 'Normal'), (2, 'Cumulative')], null=True)),
                ('invoice_stage', models.IntegerField(blank=True, choices=[(1, 'Work in progress'), (2, 'Final')], default=1, null=True)),
                ('mode_of_payment', models.IntegerField(blank=True, choices=[('', 'Select a Option'), (1, 'Credit'), (2, 'Cash')], null=True)),
            ],
            options={
                'db_table': 'amoeba__Project_Invoces',
            },
        ),
        migrations.CreateModel(
            name='ProjectInvoicingPercentage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage', models.IntegerField(choices=[(1, 'Delivery'), (2, 'Stage 1'), (3, 'Stage 2'), (4, 'Stage 3')])),
                ('invoice_percentage', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
            ],
            options={
                'db_table': 'amoeba__Project_Invoicing_Percentage',
            },
        ),
        migrations.CreateModel(
            name='ProjectInvoicingProducts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_percentage', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8, null=True)),
                ('quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8, null=True)),
                ('total', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8, null=True)),
            ],
            options={
                'db_table': 'amoeba__Project_Invoiced_Products',
            },
        ),
        migrations.CreateModel(
            name='ProjectSepcificationsApproval',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'amoeba__ProjectSepcificationsApproval',
            },
        ),
        migrations.CreateModel(
            name='ProjectsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('project_id', models.CharField(blank=True, help_text='ID of the project', max_length=255, null=True)),
                ('project_title', models.CharField(blank=True, help_text='Title of the project', max_length=255, null=True)),
                ('project_image', models.ImageField(blank=True, null=True, upload_to='project/image')),
                ('created_date', models.DateTimeField(blank=True, help_text='Created date', null=True)),
                ('due_date', models.DateTimeField(blank=True, help_text='Due date', null=True)),
                ('status', models.IntegerField(choices=[(1, 'Ongoing'), (2, 'Onhold'), (3, 'Drop'), (4, 'Completed'), (0, 'Test')], default=1, help_text='Status of the project', null=True)),
            ],
            options={
                'db_table': 'amoeba__Projects',
            },
        ),
        migrations.CreateModel(
            name='ProjectWCR',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('wcr_number', models.CharField(blank=True, max_length=255, null=True)),
                ('wcr_notes', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'amoeba__Project_WCR',
            },
        ),
        migrations.CreateModel(
            name='QAQC_Associated_Product_History',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('rating', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'amoeba__QAQC_Associated_Product_History',
            },
        ),
        migrations.CreateModel(
            name='QAQC_Infill_History',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('rating', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'amoeba__QAQC_Infill_History',
            },
        ),
        migrations.CreateModel(
            name='QAQC_infill_Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('received_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('remaining_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('completed_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('is_qaqc_completed', models.BooleanField(default=False)),
                ('delivery_remaining_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('delivery_completed_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('is_delivered', models.BooleanField(default=False)),
                ('rating', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'amoeba__QAQC_infill_Products',
            },
        ),
        migrations.CreateModel(
            name='QAQC_Main_Product_History',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('rating', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'amoeba__QAQC_Main_Product_History',
            },
        ),
        migrations.CreateModel(
            name='QAQC_parameters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter_name', models.CharField(max_length=225)),
            ],
            options={
                'db_table': 'amoeba__QAQC_parameters',
            },
        ),
        migrations.CreateModel(
            name='QAQC_RatingHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'amoeba__QAQC_RatingHistory',
            },
        ),
        migrations.CreateModel(
            name='SalesOrderAccessories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accessory_item_quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('accessory_item_price', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('accessory_item_total', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
            ],
            options={
                'db_table': 'amoeba__SalesOrderAccessories',
            },
        ),
        migrations.CreateModel(
            name='SalesOrderAddons',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pricing_type', models.IntegerField(blank=True, choices=[(1, 'Lm'), (2, 'SqM'), (3, "No's")], null=True)),
                ('base_rate', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('addon_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SalesOrderGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'amoeba__SalesOrderGroups',
            },
        ),
        migrations.CreateModel(
            name='SalesOrderInfill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('infill_area', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('infill_primary', models.BooleanField(blank=True, default=True, null=True)),
                ('infill_width', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('infill_height', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('infill_quantity', models.IntegerField(blank=True, default=1, null=True)),
                ('panel_type', models.IntegerField(blank=True, choices=[(1, 'Vision Panel'), (2, 'Spandrel Panel'), (3, 'Openable Panel')], null=True)),
            ],
            options={
                'db_table': 'amoeba__SalesOrderInfill',
            },
        ),
        migrations.CreateModel(
            name='SalesOrderItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('width', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('area', models.DecimalField(blank=True, decimal_places=2, default=1, max_digits=10, null=True)),
                ('total_area', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('product_type', models.IntegerField(blank=True, choices=[(1, 'Main Product'), (2, 'Associated Product'), (3, 'Secondary')], default=1, null=True)),
                ('associated_key', models.CharField(blank=True, max_length=100, null=True)),
                ('is_sourced', models.BooleanField(blank=True, default=False, null=True)),
                ('product_code', models.CharField(blank=True, max_length=255, null=True)),
                ('product_description', models.CharField(blank=True, max_length=255, null=True)),
                ('unit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_accessory', models.BooleanField(default=False)),
                ('price_per_sqm', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('accessory_quantity', models.IntegerField(blank=True, default=1, null=True)),
                ('accessory_total', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('enable_addons', models.BooleanField(default=False)),
                ('eps_uom', models.IntegerField(blank=True, choices=[(1, "No's"), (2, 'Lumpsum'), (3, 'Linear Meter')], null=True)),
            ],
            options={
                'db_table': 'amoeba__SalesOrderItems',
            },
        ),
        migrations.CreateModel(
            name='SalesOrderSpecification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(blank=True, max_length=50, null=True)),
                ('have_vision_panels', models.BooleanField(default=False)),
                ('have_spandrel_panels', models.BooleanField(default=False)),
                ('have_openable_panels', models.BooleanField(default=False)),
                ('vision_panels', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('spandrel_panels', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('openable_panels', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('reset_status', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'amoeba__SalesOrderSpecification',
            },
        ),
        migrations.CreateModel(
            name='SalesSecondarySepcPanels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('panel_type', models.IntegerField(blank=True, choices=[(0, 'N/A'), (1, 'Vision Panel'), (2, 'Spandrel Panel'), (3, 'Openable Panel')], null=True)),
            ],
            options={
                'db_table': 'amoeba__SalesSecondarySepcPanels',
            },
        ),
        migrations.CreateModel(
            name='Schedule_Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(blank=True, null=True)),
                ('expected_completion', models.DateField(blank=True, null=True)),
                ('shopfloor_status', models.IntegerField(choices=[(1, 'Received'), (2, 'Scheduled'), (3, 'On-Hold'), (4, 'Completed')], default=1)),
                ('processing_type', models.IntegerField(choices=[(1, 'In-House'), (2, 'Outsource')])),
                ('notes', models.CharField(blank=True, max_length=1000, null=True)),
                ('in_workstation', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'amoeba__Eps_Schedule_Product',
            },
        ),
        migrations.CreateModel(
            name='ShopFloor_Doc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shopfloor_doc', models.FileField(blank=True, max_length=10000, null=True, upload_to='shopfloor/', validators=[django.core.validators.FileExtensionValidator(['pdf', 'csv', 'xlsx'])])),
            ],
            options={
                'db_table': 'amoeba__ShopFloor_Doc',
            },
        ),
        migrations.CreateModel(
            name='Temp_EPS_Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_status', models.IntegerField(choices=[(1, 'Not Processed'), (2, 'Processed')], default=1)),
            ],
            options={
                'db_table': 'amoeba__Temp_EPS_Products',
            },
        ),
        migrations.CreateModel(
            name='WCRProducts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_qunatity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8, null=True)),
                ('installed_qunatity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8, null=True)),
            ],
            options={
                'db_table': 'amoeba__WCRProducts',
            },
        ),
        migrations.CreateModel(
            name='Workstation_Associated_Product_History',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('received_quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('completion_time', models.CharField(default='00:00', max_length=10)),
            ],
            options={
                'db_table': 'amoeba__Workstation_Associated_Product_History',
            },
        ),
        migrations.CreateModel(
            name='Workstation_Associated_Products_Data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('received_quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('completed_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('remaining_quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('qaqc_received_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('qaqc_remaining_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('qaqc_completed_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('is_qaqc_completed', models.BooleanField(default=False)),
                ('delivery_remaining_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('delivery_completed_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('is_delivered', models.BooleanField(default=False)),
                ('total_completion_time', models.TextField(blank=True, default='00:00', null=True)),
                ('rating', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'amoeba__Workstation_Associated_Products_Data',
            },
        ),
        migrations.CreateModel(
            name='Workstation_Data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('received_quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('completed_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('remaining_quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('qaqc_received_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('qaqc_remaining_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('qaqc_completed_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('is_qaqc_completed', models.BooleanField(default=False)),
                ('qaqc_status', models.IntegerField(blank=True, choices=[(1, 'Accepted'), (2, 'Rejected')], null=True)),
                ('delivery_remaining_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('delivery_completed_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('is_delivered', models.BooleanField(default=False)),
                ('total_completion_time', models.TextField(blank=True, default='00:00', null=True)),
                ('rating', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'amoeba__Workstation_Data',
            },
        ),
        migrations.CreateModel(
            name='Workstation_History',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('received_quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('completion_time', models.CharField(default='00:00', max_length=10)),
            ],
            options={
                'db_table': 'amoeba__Workstation_History',
            },
        ),
    ]
