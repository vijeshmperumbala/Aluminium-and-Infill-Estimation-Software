# Generated by Django 3.2.4 on 2025-04-20 07:27

import datetime
import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuditLogModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=500)),
                ('date_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('module', models.CharField(blank=True, max_length=225, null=True)),
                ('old_area', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('new_area', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('old_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('new_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('old_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('new_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('old_sqm', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('new_sqm', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
            ],
            options={
                'db_table': 'amoeba__AuditLogModel',
            },
        ),
        migrations.CreateModel(
            name='Deduction_Items',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('main_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('item_width', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('item_height', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('item_quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('item_deduction_area', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('item_deduction_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
            ],
            options={
                'db_table': 'amoeba__EstimationMainProduct_Deduction_Items',
            },
        ),
        migrations.CreateModel(
            name='Estimation_GeneralNotes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('general_notes', models.CharField(blank=True, max_length=10000, null=True)),
            ],
            options={
                'db_table': 'amoeba__Estimation_General_Notes',
            },
        ),
        migrations.CreateModel(
            name='Estimation_Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('rating_count', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
            ],
            options={
                'db_table': 'amoeba__Estimation_Rating',
            },
        ),
        migrations.CreateModel(
            name='Estimation_UserTimes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active_time', models.DurationField(default=datetime.timedelta(0))),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('last_update', models.CharField(default='00:00:00', max_length=8)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Active'), (2, 'In Progress'), (3, 'Management Review'), (4, 'Re-Estimating'), (5, 'Quotation On Hold'), (6, 'Approved'), (7, 'Inactive'), (9, 'Estimating'), (10, 'Quote'), (12, 'Quotation Sent'), (13, 'Customer Approved'), (14, 'Recalled'), (15, 'Approved with Signature')], null=True)),
            ],
            options={
                'db_table': 'amoeba__Estimation_UserTimes',
            },
        ),
        migrations.CreateModel(
            name='EstimationBuildings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('building_name', models.CharField(max_length=255)),
                ('no_typical_buildings', models.IntegerField(blank=True, default=0, null=True)),
                ('typical_buildings_enabled', models.BooleanField(default=False)),
                ('disabled', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'amoeba__EstimationBuildings',
            },
        ),
        migrations.CreateModel(
            name='EstimationMainProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('product_type', models.IntegerField(blank=True, choices=[(1, 'Main Product'), (2, 'Associated Product')], default=1, null=True)),
                ('associated_key', models.CharField(blank=True, max_length=100, null=True)),
                ('is_accessory', models.BooleanField(default=True)),
                ('accessory_quantity', models.IntegerField(blank=True, default=1, null=True)),
                ('accessory_total', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('is_tolerance', models.BooleanField(blank=True, default=False, null=True)),
                ('tolerance_type', models.IntegerField(blank=True, choices=[(1, 'Percentage'), (2, 'Fixed Value')], null=True)),
                ('tolerance', models.CharField(blank=True, default=0, max_length=50, null=True)),
                ('total_addon_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('is_sourced', models.BooleanField(blank=True, default=False, null=True)),
                ('enable_addons', models.BooleanField(blank=True, default=False, null=True)),
                ('is_display_data', models.BooleanField(blank=True, default=False, null=True)),
                ('display_product_name', models.CharField(blank=True, max_length=225, null=True)),
                ('display_width', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('display_height', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('display_area', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('display_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('display_total_area', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('hide_dimension', models.BooleanField(blank=True, default=False, null=True)),
                ('total_associated_area', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('after_deduction_price', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('deduction_price', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('deduction_type', models.IntegerField(blank=True, choices=[(1, 'SqM'), (2, 'Non-SqM')], null=True)),
                ('deduction_method', models.IntegerField(blank=True, choices=[(1, 'partial'), (2, 'full'), (3, 'merge')], null=True)),
                ('deducted_area', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('product_unit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('product_sqm_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('product_sqm_price_without_addon', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('product_base_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('have_merge', models.BooleanField(default=False)),
                ('merge_price', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('minimum_price', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('convert_to_sales', models.BooleanField(default=False)),
                ('disabled', models.BooleanField(default=False)),
                ('product_index', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'amoeba__EstimationMainProduct',
            },
        ),
        migrations.CreateModel(
            name='EstimationMainProductMergeData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('merged_area', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('merged_price', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('merge_quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('merge_aluminium_price', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('merge_infill_price', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('merge_sealant_price', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('merge_accessory_price', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
            ],
            options={
                'db_table': 'amoeba__EstimationMainProduct_MergeData',
            },
        ),
        migrations.CreateModel(
            name='EstimationManiVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('version_text', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
            ],
            options={
                'db_table': 'amoeba__EstimationManiVersion',
            },
        ),
        migrations.CreateModel(
            name='EstimationProduct_Associated_Data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_sync', models.BooleanField(default=False)),
                ('associated_qunaty', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('assoicated_area', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('is_deducted', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'amoeba__EstimationProduct_Associated_Data',
            },
        ),
        migrations.CreateModel(
            name='EstimationProductComplaints',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('is_aluminium_complaint', models.BooleanField(blank=True, default=False, null=True)),
                ('aluminium_complaint', models.CharField(blank=True, max_length=1000, null=True)),
                ('is_panel_complaint', models.BooleanField(blank=True, default=False, null=True)),
                ('panel_complaint', models.CharField(blank=True, max_length=1000, null=True)),
                ('is_surface_finish_complaint', models.BooleanField(blank=True, default=False, null=True)),
                ('surface_finish_complaint', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'amoeba__EstimationProductComplaints',
            },
        ),
        migrations.CreateModel(
            name='EstimationProjectSpecifications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('specification', models.CharField(max_length=1000)),
            ],
            options={
                'db_table': 'amoeba__Estimation_ProjectSpecifications',
            },
        ),
        migrations.CreateModel(
            name='EstimationSubmitting_Hours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('time_data', models.CharField(blank=True, default='00:00:00', max_length=30, null=True)),
            ],
            options={
                'db_table': 'amoeba__EstimationSubmitting_Hours',
            },
        ),
        migrations.CreateModel(
            name='EstimationVersions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('version', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Active'), (2, 'In Progress'), (3, 'Management Review'), (4, 'Re-Estimating'), (5, 'Quotation On Hold'), (6, 'Approved'), (7, 'Inactive'), (9, 'Estimating'), (10, 'Quote'), (12, 'Quotation Sent'), (13, 'Customer Approved'), (14, 'Recalled'), (15, 'Approved with Signature')], default=1, null=True)),
            ],
            options={
                'db_table': 'amoeba__EstimationVersions',
            },
        ),
        migrations.CreateModel(
            name='MainProductAccessories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('accessory_item_quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('accessory_item_price', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('accessory_item_total', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
            ],
            options={
                'db_table': 'amoeba__EstimationMainProductAccessory',
            },
        ),
        migrations.CreateModel(
            name='MainProductAddonCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('pricing_type', models.IntegerField(blank=True, choices=[(1, 'Price per Linear Meter'), (2, 'Price per Square Meter'), (3, 'Price per Unit')], null=True)),
                ('base_rate', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('addon_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'amoeba__MainProductAddonCost',
            },
        ),
        migrations.CreateModel(
            name='MainProductAluminium',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('aluminium_pricing', models.IntegerField(blank=True, choices=[(1, 'Predefined Prices'), (2, 'Custom Pricing'), (3, 'None'), (4, 'Formula Based')], default=3, null=True)),
                ('al_price_per_unit', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('al_price_per_sqm', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('al_weight_per_unit', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('formula_base', models.BooleanField(default=False)),
                ('al_markup', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('pricing_unit', models.IntegerField(blank=True, choices=[(1, 'Pricing for SqM'), (2, 'Pricing for Unit'), (3, 'Pricing for KG')], null=True)),
                ('custom_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=20, null=True)),
                ('al_quoted_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=20, null=True)),
                ('width', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('area', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('enable_divisions', models.BooleanField(blank=True, default=False, null=True)),
                ('horizontal', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('vertical', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('curtainwall_type', models.BooleanField(default=False)),
                ('is_conventional', models.BooleanField(default=False)),
                ('is_two_way', models.BooleanField(default=False)),
                ('total_linear_meter', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=20, null=True)),
                ('weight_per_lm', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=20, null=True)),
                ('quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('total_area', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('total_weight', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('product_type', models.CharField(blank=True, max_length=255, null=True)),
                ('product_description', models.CharField(blank=True, max_length=255, null=True)),
                ('price_per_kg', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('weight_per_unit', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('total_quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('in_area_input', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'amoeba__MainProductAluminium',
            },
        ),
        migrations.CreateModel(
            name='MainProductGlass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('is_glass_cost', models.BooleanField(blank=True, default=False, null=True)),
                ('total_area_glass', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('glass_base_rate', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('glass_markup_percentage', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('glass_quoted_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('glass_pricing_type', models.IntegerField(blank=True, choices=[(1, 'Predefined Prices'), (2, 'Custom Pricing'), (3, 'None')], default=3, null=True)),
                ('glass_price_per_sqm', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('glass_primary', models.BooleanField(blank=True, default=True, null=True)),
                ('glass_width', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('glass_height', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('glass_area', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('glass_quantity', models.IntegerField(blank=True, default=1, null=True)),
            ],
            options={
                'db_table': 'amoeba__MainProductGlass',
            },
        ),
        migrations.CreateModel(
            name='MainProductSilicon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('is_silicon', models.BooleanField(blank=True, default=True, null=True)),
                ('external_lm', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('external_base_rate', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('external_markup', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('internal_lm', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('internal_base_rate', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('internal_markup', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('silicon_quoted_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('polyamide_markup', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('polyamide_base_rate', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('polyamide_lm', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('transom_markup', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('transom_base_rate', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('transom_lm', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('mullion_markup', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('mullion_base_rate', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('mullion_lm', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'amoeba__MainProductSilicon',
            },
        ),
        migrations.CreateModel(
            name='PricingOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('is_pricing_control', models.BooleanField(blank=True, default=False, null=True)),
                ('overhead_perce', models.DecimalField(blank=True, decimal_places=20, default=0, max_digits=100, null=True)),
                ('labour_perce', models.DecimalField(blank=True, decimal_places=20, default=0, max_digits=100, null=True)),
                ('adjust_by_sqm', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'amoeba__PricingOption',
            },
        ),
        migrations.CreateModel(
            name='ProductCategoryRemarks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('remark', models.CharField(blank=True, max_length=1000, null=True)),
                ('acknowledgement', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'amoeba__ProductCategoryRemarks',
            },
        ),
        migrations.CreateModel(
            name='ProductComments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('comment', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'amoeba__ProductComments',
            },
        ),
        migrations.CreateModel(
            name='Quotation_Notes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('quotation_notes', models.CharField(max_length=2000)),
                ('quote_value', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'amoeba__Quotation_Notes',
            },
        ),
        migrations.CreateModel(
            name='Quotation_Notes_Comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('comments', models.CharField(blank=True, max_length=225, null=True)),
                ('is_read', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'amoeba__Quotation_Notes_Comments',
            },
        ),
        migrations.CreateModel(
            name='Quotation_Provisions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provision_cost', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
            ],
            options={
                'db_table': 'amoeba__Quotation_Provisions',
            },
        ),
        migrations.CreateModel(
            name='QuotationDownloadHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'amoeba__Quotation_Download_History',
            },
        ),
        migrations.CreateModel(
            name='Quotations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('quotation_id', models.CharField(max_length=225)),
                ('quotation_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('valid_till', models.DateTimeField(default=datetime.date(2025, 5, 20))),
                ('q_type', models.IntegerField(blank=True, choices=[(1, 'General'), (2, 'Short')], default=1, null=True)),
                ('remarks', models.CharField(blank=True, max_length=5000, null=True)),
                ('description', models.CharField(blank=True, max_length=5000, null=True)),
                ('products_specifications', models.CharField(blank=True, max_length=5000, null=True)),
                ('terms_of_payment', models.CharField(blank=True, max_length=5000, null=True)),
                ('exclusions', models.CharField(blank=True, max_length=5000, null=True)),
                ('terms_and_conditions', models.CharField(blank=True, max_length=10000, null=True)),
                ('discount_type', models.IntegerField(blank=True, choices=[(0, 'None'), (1, 'Percentage'), (2, 'Fixed Value')], default=0, null=True)),
                ('apply_total', models.BooleanField(blank=True, default=True, null=True)),
                ('apply_line_items', models.BooleanField(blank=True, default=False, null=True)),
                ('discount', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('quoatation_approval_number', models.CharField(blank=True, default=1, max_length=2, null=True)),
                ('custom_specifictaion', models.BooleanField(blank=True, default=False, null=True)),
                ('notes', models.CharField(blank=True, max_length=5000, null=True)),
                ('watermark', models.CharField(blank=True, default='Draft', max_length=10, null=True)),
                ('building_total_enable', models.BooleanField(blank=True, default=False, null=True)),
                ('quote_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('other_notes', models.CharField(blank=True, max_length=10000, null=True)),
                ('is_draft', models.BooleanField(default=True)),
                ('is_provisions', models.BooleanField(default=False)),
                ('is_dimensions', models.BooleanField(default=True)),
                ('is_quantity', models.BooleanField(default=True)),
                ('is_rpu', models.BooleanField(default=True)),
                ('is_rpsqm', models.BooleanField(default=False)),
                ('is_area', models.BooleanField(default=False)),
                ('display_discount_perc', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'amoeba__Quotations',
            },
        ),
        migrations.CreateModel(
            name='Quote_Send_Detail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, choices=[(1, 'By Hand'), (2, 'By Email'), (3, 'By Fax')], null=True)),
                ('notes', models.CharField(blank=True, max_length=1000, null=True)),
                ('send_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'amoeba__Quote_Send_Detail',
            },
        ),
        migrations.CreateModel(
            name='Temp_AuditLogModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=500)),
                ('date_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('old_area', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('new_area', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('old_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('new_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('old_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('new_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('old_sqm', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('new_sqm', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('module', models.CharField(blank=True, max_length=225, null=True)),
            ],
            options={
                'db_table': 'amoeba__Temp_AuditLogModel',
            },
        ),
        migrations.CreateModel(
            name='Temp_Deduction_Items',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('main_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('item_width', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('item_height', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('item_quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('item_deduction_area', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('item_deduction_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
            ],
            options={
                'db_table': 'amoeba__Temp_EstimationMainProduct_Deduction_Items',
            },
        ),
        migrations.CreateModel(
            name='Temp_Estimation_GeneralNotes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('general_notes', models.CharField(blank=True, max_length=10000, null=True)),
            ],
            options={
                'db_table': 'amoeba__Temp_Estimation_General_Notes',
            },
        ),
        migrations.CreateModel(
            name='Temp_Estimation_UserTimes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active_time', models.DurationField(default=datetime.timedelta(0))),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('last_update', models.CharField(default='00:00:00', max_length=8)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Active'), (2, 'In Progress'), (3, 'Management Review'), (4, 'Re-Estimating'), (5, 'Quotation On Hold'), (6, 'Approved'), (7, 'Inactive'), (9, 'Estimating'), (10, 'Quote'), (12, 'Quotation Sent'), (13, 'Customer Approved'), (14, 'Recalled'), (15, 'Approved with Signature')], null=True)),
            ],
            options={
                'db_table': 'amoeba__Temp_Estimation_UserTimes',
            },
        ),
        migrations.CreateModel(
            name='Temp_EstimationBuildings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('building_name', models.CharField(max_length=255)),
                ('no_typical_buildings', models.IntegerField(blank=True, default=0, null=True)),
                ('typical_buildings_enabled', models.BooleanField(default=False)),
                ('disabled', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'amoeba__Temp_EstimationBuildings',
            },
        ),
        migrations.CreateModel(
            name='Temp_EstimationMainProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('product_type', models.IntegerField(blank=True, choices=[(1, 'Main Product'), (2, 'Associated Product')], default=1, null=True)),
                ('associated_key', models.CharField(blank=True, max_length=100, null=True)),
                ('is_accessory', models.BooleanField(default=True)),
                ('accessory_quantity', models.IntegerField(blank=True, default=1, null=True)),
                ('accessory_total', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('is_tolerance', models.BooleanField(blank=True, default=False, null=True)),
                ('tolerance_type', models.IntegerField(blank=True, choices=[(1, 'Percentage'), (2, 'Fixed Value')], null=True)),
                ('tolerance', models.CharField(blank=True, default=0, max_length=50, null=True)),
                ('total_addon_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('is_sourced', models.BooleanField(blank=True, default=False, null=True)),
                ('enable_addons', models.BooleanField(blank=True, default=False, null=True)),
                ('is_display_data', models.BooleanField(blank=True, default=False, null=True)),
                ('display_product_name', models.CharField(blank=True, max_length=225, null=True)),
                ('display_width', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('display_height', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('display_area', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('display_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('display_total_area', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('hide_dimension', models.BooleanField(blank=True, default=False, null=True)),
                ('total_associated_area', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('after_deduction_price', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('deduction_price', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('deduction_type', models.IntegerField(blank=True, choices=[(1, 'SqM'), (2, 'Non-SqM')], null=True)),
                ('deduction_method', models.IntegerField(blank=True, choices=[(1, 'partial'), (2, 'full'), (3, 'merge')], null=True)),
                ('deducted_area', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('product_unit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('product_sqm_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('product_sqm_price_without_addon', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('product_base_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('have_merge', models.BooleanField(default=False)),
                ('merge_price', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('minimum_price', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('disabled', models.BooleanField(default=False)),
                ('product_index', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'amoeba__Temp_EstimationMainProduct',
            },
        ),
        migrations.CreateModel(
            name='Temp_EstimationMainProductMergeData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('merged_area', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('merged_price', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('merge_quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('merge_aluminium_price', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('merge_infill_price', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('merge_sealant_price', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('merge_accessory_price', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
            ],
            options={
                'db_table': 'amoeba__Temp_EstimationMainProduct_MergeData',
            },
        ),
        migrations.CreateModel(
            name='Temp_EstimationProduct_Associated_Data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_sync', models.BooleanField(default=False)),
                ('associated_qunaty', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('assoicated_area', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('is_deducted', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'amoeba__Temp_EstimationProduct_Associated_Data',
            },
        ),
        migrations.CreateModel(
            name='Temp_EstimationProductComplaints',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('is_aluminium_complaint', models.BooleanField(blank=True, default=False, null=True)),
                ('aluminium_complaint', models.CharField(blank=True, max_length=1000, null=True)),
                ('is_panel_complaint', models.BooleanField(blank=True, default=False, null=True)),
                ('panel_complaint', models.CharField(blank=True, max_length=1000, null=True)),
                ('is_surface_finish_complaint', models.BooleanField(blank=True, default=False, null=True)),
                ('surface_finish_complaint', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'amoeba__Temp_EstimationProductComplaints',
            },
        ),
        migrations.CreateModel(
            name='Temp_EstimationProjectSpecifications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('specification', models.CharField(max_length=1000)),
            ],
            options={
                'db_table': 'amoeba__Temp_Estimation_ProjectSpecifications',
            },
        ),
        migrations.CreateModel(
            name='Temp_MainProductAccessories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('accessory_item_quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('accessory_item_price', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('accessory_item_total', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
            ],
            options={
                'db_table': 'amoeba__Temp_EstimationMainProductAccessory',
            },
        ),
        migrations.CreateModel(
            name='Temp_MainProductAddonCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('base_rate', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('pricing_type', models.IntegerField(blank=True, choices=[(1, 'Price per Linear Meter'), (2, 'Price per Square Meter'), (3, 'Price per Unit')], null=True)),
                ('addon_quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'amoeba__Temp_MainProductAddonCost',
            },
        ),
        migrations.CreateModel(
            name='Temp_MainProductAluminium',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('aluminium_pricing', models.IntegerField(blank=True, choices=[(1, 'Predefined Prices'), (2, 'Custom Pricing'), (3, 'None'), (4, 'Formula Based')], default=3, null=True)),
                ('al_price_per_unit', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('al_price_per_sqm', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('al_weight_per_unit', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('formula_base', models.BooleanField(default=False)),
                ('al_markup', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('pricing_unit', models.IntegerField(blank=True, choices=[(1, 'Pricing for SqM'), (2, 'Pricing for Unit'), (3, 'Pricing for KG')], null=True)),
                ('custom_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('al_quoted_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=20, null=True)),
                ('width', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('area', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('enable_divisions', models.BooleanField(blank=True, default=False, null=True)),
                ('horizontal', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('vertical', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('curtainwall_type', models.BooleanField(default=False)),
                ('is_conventional', models.BooleanField(default=False)),
                ('is_two_way', models.BooleanField(default=False)),
                ('total_linear_meter', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=20, null=True)),
                ('weight_per_lm', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=20, null=True)),
                ('quantity', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('total_area', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('total_weight', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('product_type', models.CharField(blank=True, max_length=255, null=True)),
                ('product_description', models.CharField(blank=True, max_length=255, null=True)),
                ('price_per_kg', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('weight_per_unit', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('total_quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('in_area_input', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'amoeba__Temp_MainProductAluminium',
            },
        ),
        migrations.CreateModel(
            name='Temp_MainProductGlass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('is_glass_cost', models.BooleanField(blank=True, default=False, null=True)),
                ('total_area_glass', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('glass_base_rate', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('glass_markup_percentage', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('glass_quoted_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('glass_pricing_type', models.IntegerField(blank=True, choices=[(1, 'Predefined Prices'), (2, 'Custom Pricing'), (3, 'None')], null=True)),
                ('glass_price_per_sqm', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('glass_primary', models.BooleanField(blank=True, default=True, null=True)),
                ('glass_width', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('glass_height', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('glass_area', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('glass_quantity', models.IntegerField(blank=True, default=1, null=True)),
            ],
            options={
                'db_table': 'amoeba__Temp_MainProductGlass',
            },
        ),
        migrations.CreateModel(
            name='Temp_MainProductSecondtaryGlass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('sec_is_glass_cost', models.BooleanField(blank=True, default=False, null=True)),
                ('sec_base_rate', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('sec_markup_percentage', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('sec_quoted_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('sec_glass_pricing_type', models.IntegerField(blank=True, choices=[(1, 'Predefined Prices'), (2, 'Custom Pricing'), (3, 'None')], default=3, null=True)),
                ('sec_price_per_sqm', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('sec_glass_primary', models.BooleanField(blank=True, default=True, null=True)),
                ('sec_width', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('sec_height', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('sec_area', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('sec_quantity', models.IntegerField(blank=True, default=1, null=True)),
                ('sec_total_area', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
            ],
            options={
                'db_table': 'amoeba__Temp_MainProductSecondaryGlass',
            },
        ),
        migrations.CreateModel(
            name='Temp_MainProductSilicon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('is_silicon', models.BooleanField(blank=True, default=True, null=True)),
                ('external_base_rate', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('external_markup', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('external_lm', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('internal_lm', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('internal_base_rate', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('internal_markup', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('silicon_quoted_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('polyamide_markup', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('polyamide_base_rate', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('polyamide_lm', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('transom_markup', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('transom_base_rate', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('transom_lm', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('mullion_markup', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('mullion_base_rate', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('mullion_lm', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'amoeba__Temp_MainProductSilicon',
            },
        ),
        migrations.CreateModel(
            name='Temp_PricingOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('is_pricing_control', models.BooleanField(blank=True, default=False, null=True)),
                ('overhead_perce', models.DecimalField(blank=True, decimal_places=20, default=0, max_digits=100, null=True)),
                ('labour_perce', models.DecimalField(blank=True, decimal_places=20, default=0, max_digits=100, null=True)),
                ('adjust_by_sqm', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'amoeba__Tepm_PricingOption',
            },
        ),
        migrations.CreateModel(
            name='Temp_ProductComments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('comment', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'amoeba__Temp_ProductComments',
            },
        ),
        migrations.CreateModel(
            name='Temp_Quotation_Notes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('quotation_notes', models.CharField(max_length=2000)),
                ('quote_value', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'amoeba__Temp_Quotation_Notes',
            },
        ),
        migrations.CreateModel(
            name='Temp_Quotation_Notes_Comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('comments', models.CharField(blank=True, max_length=225, null=True)),
                ('is_read', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'amoeba__Temp_Quotation_Notes_Comments',
            },
        ),
        migrations.CreateModel(
            name='Temp_Quotation_Provisions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provision_cost', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
            ],
            options={
                'db_table': 'amoeba__Temp_Quotation_Provisions',
            },
        ),
        migrations.CreateModel(
            name='Temp_Quotations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('quotation_id', models.CharField(max_length=225)),
                ('quotation_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('valid_till', models.DateTimeField(default=datetime.date(2025, 5, 20))),
                ('q_type', models.IntegerField(blank=True, choices=[(1, 'General'), (2, 'Short')], default=1, null=True)),
                ('remarks', models.CharField(blank=True, max_length=5000, null=True)),
                ('description', models.CharField(blank=True, max_length=5000, null=True)),
                ('products_specifications', models.CharField(blank=True, max_length=5000, null=True)),
                ('terms_of_payment', models.CharField(blank=True, max_length=10000, null=True)),
                ('exclusions', models.CharField(blank=True, max_length=5000, null=True)),
                ('terms_and_conditions', models.CharField(blank=True, max_length=10000, null=True)),
                ('discount_type', models.IntegerField(blank=True, choices=[(0, 'None'), (1, 'Percentage'), (2, 'Fixed Value')], default=0, null=True)),
                ('apply_total', models.BooleanField(blank=True, default=True, null=True)),
                ('apply_line_items', models.BooleanField(blank=True, default=False, null=True)),
                ('discount', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('quoatation_approval_number', models.CharField(blank=True, max_length=2, null=True)),
                ('custom_specifictaion', models.BooleanField(blank=True, default=False, null=True)),
                ('notes', models.CharField(blank=True, max_length=5000, null=True)),
                ('watermark', models.CharField(blank=True, default='Draft', max_length=10, null=True)),
                ('building_total_enable', models.BooleanField(blank=True, default=False, null=True)),
                ('quote_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=30, null=True)),
                ('other_notes', models.CharField(blank=True, max_length=10000, null=True)),
                ('is_draft', models.BooleanField(default=True)),
                ('is_provisions', models.BooleanField(default=False)),
                ('is_dimensions', models.BooleanField(default=True)),
                ('is_quantity', models.BooleanField(default=True)),
                ('is_rpu', models.BooleanField(default=True)),
                ('is_rpsqm', models.BooleanField(default=False)),
                ('is_area', models.BooleanField(default=False)),
                ('display_discount_perc', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'amoeba__Temp_Quotations',
            },
        ),
    ]
